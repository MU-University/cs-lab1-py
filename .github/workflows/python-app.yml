name: Python application

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Clone tests folder from another repository
        env:
          REPO_URL: https://github.com/DemoAccount112/demo-template.git
          FOLDER_PATH: tests
        run: |
          git clone --depth 1 $REPO_URL temp-repo
          cp -r temp-repo/$FOLDER_PATH ./
          rm -rf temp-repo

      - name: Setup Python # Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Test with pytest
        run: pytest tests/lab_01/test/test_main.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          # A list of JUnit XML files, directories containing the former, and wildcard
          # patterns to process.
          # See @actions/glob for supported patterns.
          path: junit/test-results-${{ matrix.python-version }}.xml
      
          # (Optional) Add a summary of the results at the top of the report
          summary: true
      
          # (Optional) Select which results should be included in the report.
          # Follows the same syntax as `pytest -r`
          display-options: fEX
      
          # (Optional) Fail the workflow if no JUnit XML was found.
          fail-on-empty: true
      
          # (Optional) Title of the test results section in the workflow summary
          title: Test results
